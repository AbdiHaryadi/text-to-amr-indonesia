Program GetSentencesForSilverData
    input   : String folder path for Indo4B corpus
    output  : Files txt contains sentences chosen for Silver Data

    list_sentences <- Get_sentences_from_corpus(os.path.join(FOLDER_PATH, 'tempo.txt'))
    for split = 0 to 5 do
        start_idx = split*20000
        stop_idx = start_idx + 20000
        with open(os.path.join(FOLDER_PATH, f'20k_indo4b_tempo_{split+1}.txt'), 'w') as f:
            for i = start_idx to stop_idx do
                f.write(list_sentences[i])
                f.write('\n')

    list_sentences <- Get_sentences_from_corpus(os.path.join(FOLDER_PATH, 'kompas.txt'))
    for split = 0 to 5 do
        start_idx = split*20000
        stop_idx = start_idx + 20000
        with open(os.path.join(FOLDER_PATH, f'20k_indo4b_kompas_{split+1}.txt'), 'w') as f:
            for i = start_idx to stop_idx do
                f.write(list_sentences[i])
                f.write('\n')
EndProgram

Function Get_sentences_from_corpus(file_path, cnt_sentences = 100000, max_iter = 1000000, min_len = 1, max_len=384)
    input   : String file path of the corpus [file_path]
    output  : List of sentences taken [final_list_sentences]

    // get some sentences from corpus
    file_size <- os.path.getsize(file_path)
    max_iter <- min(max_iter, file_size)
    list_sentences <- []
    cnt <- 0
    with open(file_path) as f:
        for _ in range(file_size):
        if (cnt==max_iter):
            break

        sent <- f.readline()
        if ("'" not in sent and '"' not in sent and len(sent)>=min_len and len(sent)<=max_len and len(sent.split())>=2):
            list_sentences.append(sent.strip())
            cnt += 1
    
    // choose sentences in a uniform distribution
    cnt_sentences <- min(cnt_sentences, list_sentences.length - 1)
    step <- math.floor(len(list_sentences) / cnt_sentences)
    list_chosen_idx_sent <- []
    cnt <- 0
    for i = 0 to list_sentences.length increment by step do
        list_chosen_idx_sent.append(i)
        cnt <- cnt + 1
        if (cnt==cnt_sentences) then
            break

    random.shuffle(list_chosen_idx_sent)

    final_list_sentences <-  [list_sentences[i] for i in list_chosen_idx_sent]

    return final_list_sentences
EndFunction